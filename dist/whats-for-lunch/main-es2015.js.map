{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth.service.ts","./src/app/meal-selector/meal-selector.component.ts","./src/app/meal-selector/meal-selector.component.html","./src/app/meals-list/meals-list.component.ts","./src/app/meals-list/meals-list.component.html","./src/app/order.service.ts","./src/app/restaurant-selector/restaurant-selector.component.ts","./src/app/restaurant-selector/restaurant-selector.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import {Component} from '@angular/core';\nimport {AuthService} from './auth.service';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'whats-for-lunch';\n\n  constructor(public authService: AuthService) {\n  }\n\n  doLogin() {\n    this.authService.doLogin();\n  }\n}\n","<div id=\"app\">\n  <h2>{{title}}</h2>\n  <button (click)=\"doLogin()\">login</button>\n  <app-restaurant-selector></app-restaurant-selector>\n  <app-meal-selector></app-meal-selector>\n  <app-meals-list></app-meals-list>\n\n  <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AngularFireModule } from '@angular/fire';\nimport {AngularFirestoreModule } from '@angular/fire/firestore';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { environment } from '../environments/environment';\nimport { MealSelectorComponent } from './meal-selector/meal-selector.component';\nimport { RestaurantSelectorComponent } from './restaurant-selector/restaurant-selector.component';\nimport { MealsListComponent } from './meals-list/meals-list.component';\nimport { AngularFireAuthModule} from '@angular/fire/auth';\nimport {AuthService} from './auth.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MealSelectorComponent,\n    RestaurantSelectorComponent,\n    MealsListComponent\n  ],\n  imports: [\n    BrowserModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFirestoreModule,\n    AngularFireAuthModule,\n    AppRoutingModule\n  ],\n  providers: [AuthService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Injectable} from '@angular/core';\nimport {AngularFireAuth} from '@angular/fire/auth';\nimport * as firebase from 'firebase/app';\nimport 'firebase/auth';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private firebaseAuth: AngularFireAuth) {\n  }\n\n  doLogin() {\n    return new Promise((resolve, reject) => {\n      const provider = new firebase.auth.GithubAuthProvider();\n      provider.addScope('repo');\n      provider.setCustomParameters({allow_signup: 'false'});\n      this.firebaseAuth\n        .signInWithPopup(provider)\n        .then(res => {\n          resolve(res);\n        }, err => {\n          console.log(err);\n          reject(err);\n        });\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {OrderService} from '../order.service';\n\n@Component({\n  selector: 'app-meal-selector',\n  templateUrl: './meal-selector.component.html',\n  styleUrls: ['./meal-selector.component.css']\n})\nexport class MealSelectorComponent implements OnInit {\n  private service: OrderService;\n\n  constructor(orderService: OrderService) {\n    this.service = orderService;\n  }\n\n  ngOnInit(): void {\n  }\n\n  add(mealName: string) {\n    console.log(mealName);\n    this.service.addItem(mealName);\n  }\n}\n","Meal: <input #mealName> <button (click)=\"add(mealName.value); mealName.value=''\">add</button>\n","import { Component, OnInit } from '@angular/core';\nimport {OrderService} from '../order.service';\nimport {Observable} from 'rxjs';\n\n@Component({\n  selector: 'app-meals-list',\n  templateUrl: './meals-list.component.html',\n  styleUrls: ['./meals-list.component.css']\n})\nexport class MealsListComponent implements OnInit {\n  items: Observable<any[]>;\n  constructor(orderservice: OrderService) {\n    this.items = orderservice.getItems();\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h2>Meals</h2>\n<ul class=\"meals\">\n  <li class=\"text\" *ngFor=\"let item of items | async\">\n    {{item.name}} | {{item.createdBy}}\n  </li>\n</ul>\n","import {Injectable} from '@angular/core';\nimport {AngularFireDatabase, AngularFireList} from '@angular/fire/database';\nimport 'firebase/database';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderService {\n  private collection: AngularFireList<unknown>;\n\n  constructor(database: AngularFireDatabase) {\n    this.collection = database.list('items');\n  }\n\n  getItems() {\n    return this.collection.valueChanges();\n  }\n\n  addItem(item) {\n    return this.collection.push({name: item});\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-restaurant-selector',\n  templateUrl: './restaurant-selector.component.html',\n  styleUrls: ['./restaurant-selector.component.css']\n})\nexport class RestaurantSelectorComponent implements OnInit {\n  restaurant = 'dummy';\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"restaurant-selector\">\n  Restaurant:\n  <select>\n    <option selected=\"selected\">{{restaurant}}</option>\n  </select>\n</div>\n\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n      apiKey: \"AIzaSyBsvnyjHWxwEk5hYIHcdMaTL5u0trm3ZM4\",\n      authDomain: \"whats-for-lunch-f4956.firebaseapp.com\",\n      databaseURL: \"https://whats-for-lunch-f4956.firebaseio.com\",\n      projectId: \"whats-for-lunch-f4956\",\n      storageBucket: \"whats-for-lunch-f4956.appspot.com\",\n      messagingSenderId: \"83822380105\",\n      appId: \"1:83822380105:web:aa692ee562fafa41276b98\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}